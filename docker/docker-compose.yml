# generated by ai

version: '3.8'

services:
  # The Web Application Service
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Pass all build args to the Dockerfile
        - CACHE_BUSTER=${CACHE_BUSTER_ARG}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
        - GEMINI_API_KEY=${GEMINI_API_KEY}
        - WEATHER_API_KEY=${WEATHER_API_KEY}
        - LSM_RSS_URL=${LSM_RSS_URL}
        - TVNET_RSS_URL=${TVNET_RSS_URL}
        - DELFI_RSS_URL=${DELFI_RSS_URL}
        - APOLLO_RSS_URL=${APOLLO_RSS_URL}
        - JAUNS_RSS_URL=${JAUNS_RSS_URL}
        - GEMINI_MODEL_NAME=${GEMINI_MODEL_NAME}
        - WEATHER_API_KEY=${WEATHER_API_KEY}
        - WEATHER_REVALIDATION_SECONDS=${WEATHER_REVALIDATION_SECONDS}
        - MY_REVALIDATE_SECRET=${MY_REVALIDATE_SECRET}
    environment:
        - MY_REVALIDATE_SECRET=${MY_REVALIDATE_SECRET} 
        - WEATHER_API_KEY=${WEATHER_API_KEY}
        - WEATHER_REVALIDATION_SECONDS=${WEATHER_REVALIDATION_SECONDS}
    ports:
      - "35201:3000"
    volumes:
      # Mount the data file. The 'web' service reads it, the 'cron' service writes to it.
      - ./data:/app/data
    restart: always

  # The Cron Job Service
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
      args:
        - CACHE_BUSTER=${CACHE_BUSTER_ARG}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    environment:
      # Pass runtime environment variables needed by the process-feeds script
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - LSM_RSS_URL=${LSM_RSS_URL}
      - TVNET_RSS_URL=${TVNET_RSS_URL}
      - DELFI_RSS_URL=${DELFI_RSS_URL}
      - APOLLO_RSS_URL=${APOLLO_RSS_URL}
      - JAUNS_RSS_URL=${JAUNS_RSS_URL}
      - GEMINI_MODEL_NAME=${GEMINI_MODEL_NAME}
      - APP_INTERNAL_URL=${APP_INTERNAL_URL}
      - MY_REVALIDATE_SECRET=${MY_REVALIDATE_SECRET}
    volumes:
      # Mount the same data file so the cron job can update it
      - ./data:/app/data
    restart: always
    command: >
      sh -c "echo 'Running initial data fetch...' && 
             npm run process-news && 
             echo 'Initial fetch complete. Starting cron daemon.' && 
             crond -f -l 8"