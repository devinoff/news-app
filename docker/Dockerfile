# generated by ai

#syntax=docker.io/docker/dockerfile:1
# Use a modern Node.js version on Alpine Linux for a small base image
FROM node:20-alpine AS base

# --- Builder Stage ---
# This stage builds the application. It has dev dependencies and source code.
FROM base AS builder
WORKDIR /app

# Install git so we can clone the repo
RUN apk add --no-cache git


# GitHub token for cloning the repo. Pass this during the build.
ARG GITHUB_TOKEN

ARG CACHE_BUSTER
RUN git clone https://x-access-token:${GITHUB_TOKEN}@github.com/devinoff/news-app.git .

COPY prompt.txt .

# Install all dependencies using the lockfile for consistency
RUN npm ci

# Pass build-time environment variables needed by 'process-feeds.ts' during the build
ARG GEMINI_API_KEY
ARG WEATHER_API_KEY
ARG LSM_RSS_URL
ARG TVNET_RSS_URL
ARG DELFI_RSS_URL
ARG APOLLO_RSS_URL
ARG JAUNS_RSS_URL
ARG GEMINI_MODEL_NAME
ARG WEATHER_REVALIDATION_SECONDS

# Make the ARGs available as environment variables for the npm run build command
ENV GEMINI_API_KEY=$GEMINI_API_KEY
ENV WEATHER_API_KEY=$WEATHER_API_KEY
ENV LSM_RSS_URL=$LSM_RSS_URL
ENV TVNET_RSS_URL=$TVNET_RSS_URL
ENV DELFI_RSS_URL=$DELFI_RSS_URL
ENV APOLLO_RSS_URL=$APOLLO_RSS_URL
ENV JAUNS_RSS_URL=$JAUNS_RSS_URL
ENV GEMINI_MODEL_NAME=$GEMINI_MODEL_NAME
ENV WEATHER_REVALIDATION_SECONDS=$WEATHER_REVALIDATION_SECONDS

# Build the Next.js application (this also runs the initial data fetch via the build script)
RUN npm run build

# --- Runner Stage (Final Image) ---
# This is the small, optimized image that will be deployed.
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

# Create a non-root user for security best practices
RUN addgroup -S --gid 1001 nodejs
RUN adduser -S --uid 1001 nextjs

# Copy only the necessary standalone output from the builder stage
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
# Copy the final data file generated during the build
RUN mkdir -p /app/data && chown nextjs:nodejs /app/data
COPY --from=builder --chown=nextjs:nodejs /app/data/article-data.json ./data/

USER nextjs

EXPOSE 3000
ENV PORT 3000

# The command to start the Next.js server
CMD ["node", "server.js"]